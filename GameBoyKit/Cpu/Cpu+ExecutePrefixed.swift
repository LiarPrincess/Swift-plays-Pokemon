// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// This file was auto-generated.
// DO NOT EDIT!

// swiftlint:disable file_length
// swiftlint:disable function_body_length
// swiftlint:disable cyclomatic_complexity

extension Cpu {

  /// Executes the instruction, returns the number of cycles it took.
  internal func executePrefixed(_ opcode: UInt8) -> UInt8 {
    switch opcode {
    case 0x0: return self.rlc_r(.b)
    case 0x1: return self.rlc_r(.c)
    case 0x2: return self.rlc_r(.d)
    case 0x3: return self.rlc_r(.e)
    case 0x4: return self.rlc_r(.h)
    case 0x5: return self.rlc_r(.l)
    case 0x6: return self.rlc_pHL()
    case 0x7: return self.rlc_r(.a)
    case 0x8: return self.rrc_r(.b)
    case 0x9: return self.rrc_r(.c)
    case 0xa: return self.rrc_r(.d)
    case 0xb: return self.rrc_r(.e)
    case 0xc: return self.rrc_r(.h)
    case 0xd: return self.rrc_r(.l)
    case 0xe: return self.rrc_pHL()
    case 0xf: return self.rrc_r(.a)
    case 0x10: return self.rl_r(.b)
    case 0x11: return self.rl_r(.c)
    case 0x12: return self.rl_r(.d)
    case 0x13: return self.rl_r(.e)
    case 0x14: return self.rl_r(.h)
    case 0x15: return self.rl_r(.l)
    case 0x16: return self.rl_pHL()
    case 0x17: return self.rl_r(.a)
    case 0x18: return self.rr_r(.b)
    case 0x19: return self.rr_r(.c)
    case 0x1a: return self.rr_r(.d)
    case 0x1b: return self.rr_r(.e)
    case 0x1c: return self.rr_r(.h)
    case 0x1d: return self.rr_r(.l)
    case 0x1e: return self.rr_pHL()
    case 0x1f: return self.rr_r(.a)
    case 0x20: return self.sla_r(.b)
    case 0x21: return self.sla_r(.c)
    case 0x22: return self.sla_r(.d)
    case 0x23: return self.sla_r(.e)
    case 0x24: return self.sla_r(.h)
    case 0x25: return self.sla_r(.l)
    case 0x26: return self.sla_pHL()
    case 0x27: return self.sla_r(.a)
    case 0x28: return self.sra_r(.b)
    case 0x29: return self.sra_r(.c)
    case 0x2a: return self.sra_r(.d)
    case 0x2b: return self.sra_r(.e)
    case 0x2c: return self.sra_r(.h)
    case 0x2d: return self.sra_r(.l)
    case 0x2e: return self.sra_pHL()
    case 0x2f: return self.sra_r(.a)
    case 0x30: return self.swap_r(.b)
    case 0x31: return self.swap_r(.c)
    case 0x32: return self.swap_r(.d)
    case 0x33: return self.swap_r(.e)
    case 0x34: return self.swap_r(.h)
    case 0x35: return self.swap_r(.l)
    case 0x36: return self.swap_pHL()
    case 0x37: return self.swap_r(.a)
    case 0x38: return self.srl_r(.b)
    case 0x39: return self.srl_r(.c)
    case 0x3a: return self.srl_r(.d)
    case 0x3b: return self.srl_r(.e)
    case 0x3c: return self.srl_r(.h)
    case 0x3d: return self.srl_r(.l)
    case 0x3e: return self.srl_pHL()
    case 0x3f: return self.srl_r(.a)
    case 0x40: return self.bit_r(0, .b)
    case 0x41: return self.bit_r(0, .c)
    case 0x42: return self.bit_r(0, .d)
    case 0x43: return self.bit_r(0, .e)
    case 0x44: return self.bit_r(0, .h)
    case 0x45: return self.bit_r(0, .l)
    case 0x46: return self.bit_pHL(0)
    case 0x47: return self.bit_r(0, .a)
    case 0x48: return self.bit_r(1, .b)
    case 0x49: return self.bit_r(1, .c)
    case 0x4a: return self.bit_r(1, .d)
    case 0x4b: return self.bit_r(1, .e)
    case 0x4c: return self.bit_r(1, .h)
    case 0x4d: return self.bit_r(1, .l)
    case 0x4e: return self.bit_pHL(1)
    case 0x4f: return self.bit_r(1, .a)
    case 0x50: return self.bit_r(2, .b)
    case 0x51: return self.bit_r(2, .c)
    case 0x52: return self.bit_r(2, .d)
    case 0x53: return self.bit_r(2, .e)
    case 0x54: return self.bit_r(2, .h)
    case 0x55: return self.bit_r(2, .l)
    case 0x56: return self.bit_pHL(2)
    case 0x57: return self.bit_r(2, .a)
    case 0x58: return self.bit_r(3, .b)
    case 0x59: return self.bit_r(3, .c)
    case 0x5a: return self.bit_r(3, .d)
    case 0x5b: return self.bit_r(3, .e)
    case 0x5c: return self.bit_r(3, .h)
    case 0x5d: return self.bit_r(3, .l)
    case 0x5e: return self.bit_pHL(3)
    case 0x5f: return self.bit_r(3, .a)
    case 0x60: return self.bit_r(4, .b)
    case 0x61: return self.bit_r(4, .c)
    case 0x62: return self.bit_r(4, .d)
    case 0x63: return self.bit_r(4, .e)
    case 0x64: return self.bit_r(4, .h)
    case 0x65: return self.bit_r(4, .l)
    case 0x66: return self.bit_pHL(4)
    case 0x67: return self.bit_r(4, .a)
    case 0x68: return self.bit_r(5, .b)
    case 0x69: return self.bit_r(5, .c)
    case 0x6a: return self.bit_r(5, .d)
    case 0x6b: return self.bit_r(5, .e)
    case 0x6c: return self.bit_r(5, .h)
    case 0x6d: return self.bit_r(5, .l)
    case 0x6e: return self.bit_pHL(5)
    case 0x6f: return self.bit_r(5, .a)
    case 0x70: return self.bit_r(6, .b)
    case 0x71: return self.bit_r(6, .c)
    case 0x72: return self.bit_r(6, .d)
    case 0x73: return self.bit_r(6, .e)
    case 0x74: return self.bit_r(6, .h)
    case 0x75: return self.bit_r(6, .l)
    case 0x76: return self.bit_pHL(6)
    case 0x77: return self.bit_r(6, .a)
    case 0x78: return self.bit_r(7, .b)
    case 0x79: return self.bit_r(7, .c)
    case 0x7a: return self.bit_r(7, .d)
    case 0x7b: return self.bit_r(7, .e)
    case 0x7c: return self.bit_r(7, .h)
    case 0x7d: return self.bit_r(7, .l)
    case 0x7e: return self.bit_pHL(7)
    case 0x7f: return self.bit_r(7, .a)
    case 0x80: return self.res_r(0, .b)
    case 0x81: return self.res_r(0, .c)
    case 0x82: return self.res_r(0, .d)
    case 0x83: return self.res_r(0, .e)
    case 0x84: return self.res_r(0, .h)
    case 0x85: return self.res_r(0, .l)
    case 0x86: return self.res_pHL(0)
    case 0x87: return self.res_r(0, .a)
    case 0x88: return self.res_r(1, .b)
    case 0x89: return self.res_r(1, .c)
    case 0x8a: return self.res_r(1, .d)
    case 0x8b: return self.res_r(1, .e)
    case 0x8c: return self.res_r(1, .h)
    case 0x8d: return self.res_r(1, .l)
    case 0x8e: return self.res_pHL(1)
    case 0x8f: return self.res_r(1, .a)
    case 0x90: return self.res_r(2, .b)
    case 0x91: return self.res_r(2, .c)
    case 0x92: return self.res_r(2, .d)
    case 0x93: return self.res_r(2, .e)
    case 0x94: return self.res_r(2, .h)
    case 0x95: return self.res_r(2, .l)
    case 0x96: return self.res_pHL(2)
    case 0x97: return self.res_r(2, .a)
    case 0x98: return self.res_r(3, .b)
    case 0x99: return self.res_r(3, .c)
    case 0x9a: return self.res_r(3, .d)
    case 0x9b: return self.res_r(3, .e)
    case 0x9c: return self.res_r(3, .h)
    case 0x9d: return self.res_r(3, .l)
    case 0x9e: return self.res_pHL(3)
    case 0x9f: return self.res_r(3, .a)
    case 0xa0: return self.res_r(4, .b)
    case 0xa1: return self.res_r(4, .c)
    case 0xa2: return self.res_r(4, .d)
    case 0xa3: return self.res_r(4, .e)
    case 0xa4: return self.res_r(4, .h)
    case 0xa5: return self.res_r(4, .l)
    case 0xa6: return self.res_pHL(4)
    case 0xa7: return self.res_r(4, .a)
    case 0xa8: return self.res_r(5, .b)
    case 0xa9: return self.res_r(5, .c)
    case 0xaa: return self.res_r(5, .d)
    case 0xab: return self.res_r(5, .e)
    case 0xac: return self.res_r(5, .h)
    case 0xad: return self.res_r(5, .l)
    case 0xae: return self.res_pHL(5)
    case 0xaf: return self.res_r(5, .a)
    case 0xb0: return self.res_r(6, .b)
    case 0xb1: return self.res_r(6, .c)
    case 0xb2: return self.res_r(6, .d)
    case 0xb3: return self.res_r(6, .e)
    case 0xb4: return self.res_r(6, .h)
    case 0xb5: return self.res_r(6, .l)
    case 0xb6: return self.res_pHL(6)
    case 0xb7: return self.res_r(6, .a)
    case 0xb8: return self.res_r(7, .b)
    case 0xb9: return self.res_r(7, .c)
    case 0xba: return self.res_r(7, .d)
    case 0xbb: return self.res_r(7, .e)
    case 0xbc: return self.res_r(7, .h)
    case 0xbd: return self.res_r(7, .l)
    case 0xbe: return self.res_pHL(7)
    case 0xbf: return self.res_r(7, .a)
    case 0xc0: return self.set_r(0, .b)
    case 0xc1: return self.set_r(0, .c)
    case 0xc2: return self.set_r(0, .d)
    case 0xc3: return self.set_r(0, .e)
    case 0xc4: return self.set_r(0, .h)
    case 0xc5: return self.set_r(0, .l)
    case 0xc6: return self.set_pHL(0)
    case 0xc7: return self.set_r(0, .a)
    case 0xc8: return self.set_r(1, .b)
    case 0xc9: return self.set_r(1, .c)
    case 0xca: return self.set_r(1, .d)
    case 0xcb: return self.set_r(1, .e)
    case 0xcc: return self.set_r(1, .h)
    case 0xcd: return self.set_r(1, .l)
    case 0xce: return self.set_pHL(1)
    case 0xcf: return self.set_r(1, .a)
    case 0xd0: return self.set_r(2, .b)
    case 0xd1: return self.set_r(2, .c)
    case 0xd2: return self.set_r(2, .d)
    case 0xd3: return self.set_r(2, .e)
    case 0xd4: return self.set_r(2, .h)
    case 0xd5: return self.set_r(2, .l)
    case 0xd6: return self.set_pHL(2)
    case 0xd7: return self.set_r(2, .a)
    case 0xd8: return self.set_r(3, .b)
    case 0xd9: return self.set_r(3, .c)
    case 0xda: return self.set_r(3, .d)
    case 0xdb: return self.set_r(3, .e)
    case 0xdc: return self.set_r(3, .h)
    case 0xdd: return self.set_r(3, .l)
    case 0xde: return self.set_pHL(3)
    case 0xdf: return self.set_r(3, .a)
    case 0xe0: return self.set_r(4, .b)
    case 0xe1: return self.set_r(4, .c)
    case 0xe2: return self.set_r(4, .d)
    case 0xe3: return self.set_r(4, .e)
    case 0xe4: return self.set_r(4, .h)
    case 0xe5: return self.set_r(4, .l)
    case 0xe6: return self.set_pHL(4)
    case 0xe7: return self.set_r(4, .a)
    case 0xe8: return self.set_r(5, .b)
    case 0xe9: return self.set_r(5, .c)
    case 0xea: return self.set_r(5, .d)
    case 0xeb: return self.set_r(5, .e)
    case 0xec: return self.set_r(5, .h)
    case 0xed: return self.set_r(5, .l)
    case 0xee: return self.set_pHL(5)
    case 0xef: return self.set_r(5, .a)
    case 0xf0: return self.set_r(6, .b)
    case 0xf1: return self.set_r(6, .c)
    case 0xf2: return self.set_r(6, .d)
    case 0xf3: return self.set_r(6, .e)
    case 0xf4: return self.set_r(6, .h)
    case 0xf5: return self.set_r(6, .l)
    case 0xf6: return self.set_pHL(6)
    case 0xf7: return self.set_r(6, .a)
    case 0xf8: return self.set_r(7, .b)
    case 0xf9: return self.set_r(7, .c)
    case 0xfa: return self.set_r(7, .d)
    case 0xfb: return self.set_r(7, .e)
    case 0xfc: return self.set_r(7, .h)
    case 0xfd: return self.set_r(7, .l)
    case 0xfe: return self.set_pHL(7)
    case 0xff: return self.set_r(7, .a)
    default: fatalError("Tried to execute non existing opcode: \(opcode.hex).")
    }
  }
}
