// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

import Foundation

// Generated by:
// https://app.quicktype.io
private struct JsonRoot: Codable {
  let unprefixed: [String: Opcode]
  let cbprefixed: [String: Opcode]
}

// Orginal 'opcodes.json' was taken from:
// https://github.com/lmmendes/game-boy-opcodes
func readOpcodes() throws -> Opcodes {
  var fileUrl = URL(fileURLWithPath: #file, isDirectory: false)
  fileUrl.deleteLastPathComponent()
  fileUrl.appendPathComponent("opcodes.json")

  let jsonData = try Data(contentsOf: fileUrl)
  let jsonOpcodes = try JSONDecoder().decode(JsonRoot.self, from: jsonData)

  let unprefixed = parse(opcodeMap: jsonOpcodes.unprefixed)
  let cbprefixed = parse(opcodeMap: jsonOpcodes.cbprefixed)
  return Opcodes(unprefixed: unprefixed, cbprefixed: cbprefixed)
}

private func parse(opcodeMap: [String: Opcode]) -> [Opcode] {
  return opcodeMap.map { $0.value }.sorted(by: addr(_:_:))
}

private func addr(_ lhs: Opcode, _ rhs: Opcode) -> Bool {
  return lhs.addr.count != rhs.addr.count ?
    lhs.addr.count < rhs.addr.count :
    lhs.addr < rhs.addr
}
